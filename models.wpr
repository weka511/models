#!wing
#!version=9.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['boltzmann.nlogo',
                                     'Immigration.nlogo',
                                     'skins.nlogo',
                                     'El Farol.nlogo',
                                     'strategy.jpg',
                                     'LICENSE',
                                     'Immigration Groups-Density-Wanted-table.csv'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
[user attributes]
debug.recent-run-args = {loc('schelling.py'): ['--neighbourhood von',
        '--neighbourhood foo']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2557280118255728,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(2,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/framework/func_graph.py'),
                      'check_mutation')]},
        loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/lib/site-packages/tensorflow/python/keras/layers/core.py'),
                      'Activation')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/numpy/conftest.py'),
                      '')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/pandas/core/generic.py'),
                      'bool_t')]},
        loc('../anaconda3/Lib/_collections_abc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../anaconda3/Lib/_collections_abc.py'),
                      'AsyncGenerator')]},
        loc('../dynamics/chaos_book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/README.md'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../learn/bayes1.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('../learn/bayes1.py'),
        'alphas')]},
        loc('../learn/cavi1.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/cavi1.py'),
        'ys')]],
                                   'top-node': [('generic attribute',
        loc('../learn/cavi1.py'),
        'ax1')]},
        loc('../learn/fashion.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/fashion.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/fashion.py'),
        'class_names')]},
        loc('../learn/fcs.py'): {'expanded-nodes': [],
                                 'selected-nodes': [None],
                                 'top-node': None},
        loc('../learn/fcs/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../learn/fcs/fcs.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../learn/fcs/fcs.py'),
        'args')]},
        loc('../learn/fcs/gcps.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../learn/fcs/gcps.py'),
        'a')]},
        loc('../learn/fcs/partition.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/partition.py'),
                      'args')]},
        loc('../learn/fcs/plotreds.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../learn/fcs/plotreds.py'),
                      'args')]},
        loc('../learn/flowers.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('generic attribute',
        loc('../learn/flowers.py'),
        '_')]],
                                     'top-node': [('generic attribute',
        loc('../learn/flowers.py'),
        'args')]},
        loc('../learn/train.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('../learn/train.py'),
        '_')]],
                                   'top-node': [('generic attribute',
        loc('../learn/train.py'),
        'alpha')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'color',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'find_empty_location',
                                       'fReverse': True,
                                       'fSearchText': 'find_candidate',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['from random import shuffle\n',
        'll = list(range(10))\n',
        'shuffle(ll)\n',
        'll\n']},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('schelling.py'),
        {'attrib-starts': [],
         'code-line': '\r\n',
         'first-line': 188,
         'folded-linenos': [],
         'sel-line': 180,
         'sel-line-start': 6015,
         'selection_end': 6015,
         'selection_start': 6015,
         'zoom': 0},
        1676083302.2045014],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 158,
          'folded-linenos': [],
          'sel-line': 180,
          'sel-line-start': 6015,
          'selection_end': 6015,
          'selection_start': 6015,
          'zoom': 0},
         1676083351.7827272],
        [loc('schelling.py'),
         {'attrib-starts': [('SchellingModel|0|',
                             72),
                            ('SchellingModel|0|.step|0|',
                             116)],
          'code-line': '        Take one step of model, and update happiness scores\r\n',
          'first-line': 128,
          'folded-linenos': [],
          'sel-line': 118,
          'sel-line-start': 3896,
          'selection_end': 3944,
          'selection_start': 3944,
          'zoom': 0},
         1676083606.3536036],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 653,
          'selection_end': 653,
          'selection_start': 653,
          'zoom': 0},
         1676083629.9750788],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 103,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 653,
          'selection_end': 653,
          'selection_start': 653,
          'zoom': 0},
         1676083639.9942336],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 162,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 653,
          'selection_end': 653,
          'selection_start': 653,
          'zoom': 0},
         1676083700.9650867],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': 'Agent Based model for Dynamic Models of Segregation, Thomas Schelling, https://search.iczhiku.com/paper/xfVfSs6TUWsnl2Kl.pdf,\r\n',
          'first-line': 1,
          'folded-linenos': [],
          'sel-line': 4,
          'sel-line-start': 32,
          'selection_end': 250,
          'selection_start': 32,
          'zoom': 0},
         1676089611.9118257],
        [loc('schelling.py'),
         {'attrib-starts': [('SchellingModel|0|',
                             73),
                            ('SchellingModel|0|.find_empty_location|0|',
                             144)],
          'code-line': '            if n_like_me>self.threshold *(n_like_me+n_different):\r\n',
          'first-line': 132,
          'folded-linenos': [],
          'sel-line': 151,
          'sel-line-start': 5053,
          'selection_end': 5058,
          'selection_start': 5058,
          'zoom': 0},
         1676089642.8036218],
        [loc('schelling.py'),
         {'attrib-starts': [('Person|0|',
                             18),
                            ('Person|0|.is_happy|0|',
                             43)],
          'code-line': '        return n_like_me >= self.model.threshold * (n_like_me+n_different)\r\n',
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 48,
          'sel-line-start': 1433,
          'selection_end': 1507,
          'selection_start': 1448,
          'zoom': 0},
         1676089663.3204165],
        [loc('schelling.py'),
         {'attrib-starts': [('SchellingModel|0|',
                             73),
                            ('SchellingModel|0|.find_empty_location|0|',
                             144)],
          'code-line': '\r\n',
          'first-line': 139,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 5148,
          'selection_end': 5148,
          'selection_start': 5148,
          'zoom': 0},
         1676089701.9882128],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 9,
          'folded-linenos': [],
          'sel-line': 18,
          'sel-line-start': 655,
          'selection_end': 655,
          'selection_start': 655,
          'zoom': 0},
         1676089795.5637493],
        [loc('schelling.py'),
         {'attrib-starts': [('SchellingModel|0|',
                             75),
                            ('SchellingModel|0|.find_empty_location|0|',
                             146)],
          'code-line': '            if self.is_happy(n_like_me,n_different):\r\n',
          'first-line': 137,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 5057,
          'selection_end': 5108,
          'selection_start': 5072,
          'zoom': 0},
         1676089927.0167918],
        [loc('schelling.py'),
         {'attrib-starts': [('SchellingModel|0|',
                             75),
                            ('SchellingModel|0|.find_empty_location|0|',
                             146)],
          'code-line': '            if self.is_happy(n_like_me,n_different):\r\n',
          'first-line': 87,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 5057,
          'selection_end': 5108,
          'selection_start': 5072,
          'zoom': 0},
         1676089934.665164],
        [loc('schelling.py'),
         {'attrib-starts': [('SchellingModel|0|',
                             75),
                            ('SchellingModel|0|.find_empty_location|0|',
                             146)],
          'code-line': '            if self.is_happy(n_like_me,n_different):\r\n',
          'first-line': 137,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 5057,
          'selection_end': 5108,
          'selection_start': 5072,
          'zoom': 0},
         1676089943.3086257],
        [loc('schelling.py'),
         {'attrib-starts': [('Person|0|',
                             20),
                            ('Person|0|.is_happy|0|',
                             45)],
          'code-line': "        '''\r\n",
          'first-line': 40,
          'folded-linenos': [],
          'sel-line': 46,
          'sel-line-start': 1239,
          'selection_end': 1377,
          'selection_start': 1241,
          'zoom': 0},
         1676090023.952832],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': '    ax1 = fig.add_subplot(2,1,1)\r\n',
          'first-line': 202,
          'folded-linenos': [],
          'sel-line': 218,
          'sel-line-start': 7903,
          'selection_end': 7935,
          'selection_start': 7935,
          'zoom': 0},
         1676090468.1785398],
        [loc('schelling.py'),
         {'attrib-starts': [('SchellingModel|0|',
                             76),
                            ('SchellingModel|0|.__str__|0|',
                             101)],
          'code-line': '               f\'threshold={self.threshold:.3f}, using {"Moore" if self.moore else "von Neumann"} neighbourhoods\'\r\n',
          'first-line': 89,
          'folded-linenos': [],
          'sel-line': 107,
          'sel-line-start': 3470,
          'selection_end': 3519,
          'selection_start': 3519,
          'zoom': 0},
         1676093617.9900796],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 213,
          'folded-linenos': [],
          'sel-line': 224,
          'sel-line-start': 8248,
          'selection_end': 8248,
          'selection_start': 8248,
          'zoom': 0},
         1676093671.4537632],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': "    parser.add_argument('--name',                                              default = 'schelling')\r\n",
          'first-line': 181,
          'folded-linenos': [],
          'sel-line': 201,
          'sel-line-start': 7234,
          'selection_end': 7269,
          'selection_start': 7269,
          'zoom': 0},
         1676095594.571073],
        [loc('schelling.py'),
         {'attrib-starts': [],
          'code-line': "    parser.add_argument('--name',                                              default = 'schelling')\r\n",
          'first-line': 226,
          'folded-linenos': [],
          'sel-line': 201,
          'sel-line-start': 7234,
          'selection_end': 7269,
          'selection_start': 7269,
          'zoom': 0},
         1676095600.6243908]],
        20),
        'current-loc': loc('schelling.py'),
        'editor-state-list': [(loc('schelling.py'),
                               {'attrib-starts': [('SchellingModel|0|',
        76),
        ('SchellingModel|0|.__str__|0|',
         101)],
                                'code-line': "        return f'{self.nRed} Red + {self.nBlue} Blue, '                                                          \\\r\n",
                                'first-line': 94,
                                'folded-linenos': [],
                                'sel-line': 105,
                                'sel-line-start': 3244,
                                'selection_end': 3302,
                                'selection_start': 3302,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('schelling.py')]),
                               'open_files': ['schelling.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
                          1676083639.39264),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1676077521.5517573),
                 'user_data': {}},
        'window-alloc': (28,
                         -1,
                         1360,
                         732)}]}
guimgr.recent-documents = [loc('schelling.py')]
guimgr.visual-state = {loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('figure|0|',
        666)],
        'code-line': '        num = int(num)  # crude validation of num argument\r\n',
        'first-line': 747,
        'folded-linenos': [],
        'sel-line': 767,
        'sel-line-start': 27315,
        'selection_end': 27315,
        'selection_start': 27315,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/mesa/agent.py'): {'attrib-starts': [],
        'code-line': 'class Agent:\n',
        'first-line': 29,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 463,
        'selection_end': 474,
        'selection_start': 469,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/mesa/space.py'): {'attrib-starts': [('Grid|0|',
        82)],
        'code-line': '    def get_cell_list_contents(self, cell_list: Iterable[Coordinate]) -> list[Agent]:\n',
        'first-line': 372,
        'folded-linenos': [],
        'sel-line': 384,
        'sel-line-start': 12671,
        'selection_end': 12701,
        'selection_start': 12679,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python311/Lib/site-packages/mesa/time.py'): {'attrib-starts': [('BaseScheduler|0|',
        40),
        ('BaseScheduler|0|.add|0|',
         57)],
        'code-line': '            raise Exception(\n',
        'first-line': 54,
        'folded-linenos': [],
        'sel-line': 67,
        'sel-line-start': 2123,
        'selection_end': 2123,
        'selection_start': 2123,
        'zoom': 0},
                       loc('../rsna-breast-cancer-detection/src/dirichlet.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 23,
        'selection_start': 0,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': 'schelling.py|[Agent Based model for Dynamic Models of Segregation, Thomas Schelling](https://search.iczhiku.com/paper/xfVfSs6TUWsnl2Kl.pdf),\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 558,
        'selection_end': 697,
        'selection_start': 697,
        'zoom': 0},
                       loc('schelling.py'): {'attrib-starts': [],
        'code-line': 'Agent Based model for Dynamic Models of Segregation, Thomas Schelling, https://search.iczhiku.com/paper/xfVfSs6TUWsnl2Kl.pdf,\r\n',
        'first-line': 1,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 32,
        'selection_end': 250,
        'selection_start': 32,
        'zoom': 0}}
search.search-history = ['limit']
